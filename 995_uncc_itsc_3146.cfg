#cloud-config

allow_userdata: false

users:
- name: itsc
  lock_passwd: false
  groups: [adm, dialout, cdrom, floppy, sudo, audio, dip, video, plugdev, users, netdev, docker]
  plain_text_passwd: changeme
  uid: 1000

write_files:
- path: /etc/wsl.conf
  - append: false
  - source: https://raw.githubusercontent.com/jeffreyalanwang/WSL_itsc_3146/refs/heads/main/wsl.conf
# - content: | # Replaced by the 'source' line above. You could try using this instead, if you wanted to set 'append'=true and keep new config vals which come with the original Ubuntu image.
#     [boot]
#     systemd=true

#     [network]
#     hostname = ITSC-3146
- path: /etc/wsl-distribution.conf
  - append: false
  - source: https://raw.githubusercontent.com/jeffreyalanwang/WSL_itsc_3146/refs/heads/main/wsl-distribution.conf
# - content: | # Replaced by the 'source' line above. You could try using this instead, if you wanted to set 'append'=true and keep new config vals which come with the original Ubuntu image.
#       [oobe]
#       command = /etc/oobe_itsc-3146.sh
#       defaultUid = 1000
#       defaultName = ITSC-3146

#       [shortcut]
#       enabled = true
#       icon = /usr/share/wsl/ubuntu.ico

#       [windowsterminal]
#       enabled = true
#       ProfileTemplate = /usr/share/wsl/terminal-profile.json
- path: /etc/oobe_itsc-3146.sh
  - append: false
  - source: https://raw.githubusercontent.com/jeffreyalanwang/WSL_itsc_3146/refs/heads/main/oobe_itsc-3146.sh
- path: /usr/share/wsl/terminal-profile.json
  - append: false
  - source: https://raw.githubusercontent.com/jeffreyalanwang/WSL_itsc_3146/refs/heads/main/terminal-profile.json

apt:
- debconf_selections: |
    # configure Docker daemon to restart on any installation/upgrade
    docker.io docker.io/restart boolean true
package_reboot_if_required: true
packages: [
  # For class use
  g++, git,
  # IMUNES install prerequisites
  tcl, tcllib, jq, tk, imagemagick, xterm, wireshark, socat,
  make, # required only for the installation
  docker.io
]

power_state:
- delay: now
- mode: reboot
- message: "Rebooting to ensure Docker daemon is ready before installing IMUNES."

runcmd:
  # install IMUNES
- git clone https://github.com/imunes/imunes.git /run/imunes_temp/
- cd /run/imunes_temp
- sudo make install
- cd
- rm -rf /run/imunes_temp
- sudo imunes -p # probably won't work unless the system has been restarted since installing docker.io
  
  # include IMUNES templates in home directory
- git clone https://github.com/imunes/imunes-examples.git /run/examples_temp/
- mkdir /home/itsc/imunes-templates
- cp /run/examples_temp/Traceroute/traceroute.imn imunes-templates/
- cp /run/examples_temp/Ping/ping.imn imunes-templates/ # did i get them all?
- cd
- rm -rf /run/examples_temp

  # ensure users have something to see when they test VS Code functionality
- echo "EXAMPLE BASH HISTORY" >> /home/itsc/.bash_history